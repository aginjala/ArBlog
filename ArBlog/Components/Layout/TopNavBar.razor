@using ArBlog.Data.Entities
@using ArBlog.Extensions
@inject NavigationManager NavigationManager
@inject ICategoryService CategoryService

<nav class="topnav navbar navbar-expand-lg navbar-light bg-white fixed-top">
	<div class="container">
		<a class="navbar-brand" href="/"><strong>AR Blazor Blog</strong></a>
		<button class="navbar-toggler collapsed" type="button" onclick="toggleMenu(event)" aria-controls="navbarColor02" aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
		<div class="navbar-collapse collapse" id="top-navbar-menu-wrapper" style="">
			<ul class="navbar-nav mr-auto d-flex align-items-center">
				@foreach (var c in _categories)
				{
					<li class="nav-item">
						<a class="nav-link" href="@c.Slug-posts" title="@c.Name Posts">@c.Name</a>
					</li>
				}
			</ul>
			<ul class="navbar-nav ml-auto d-flex align-items-center">
				<AuthorizeView>
					<Authorized>
						<li class="nav-item">
							<a class="nav-link" href="admin/dashboard">@context.User.GetUserName()</a>
						</li>
						<li class="nav-item highlight">
							<LogoutForm ButtonStyle="nav-link" />
						</li>
					</Authorized>
					<NotAuthorized>
						@{
							if (_currentUrl != null && !_currentUrl.EndsWith("Account/Login"))
                            {
								<li class="nav-item highlight">
									<a class="nav-link" href="Account/Login">Login</a>
								</li>
                            }
						}
					</NotAuthorized>
				</AuthorizeView>
			</ul>
		</div>
	</div>
</nav>

@code {
	private string? _currentUrl;
	private Category[] _categories = [];

	protected override async Task OnInitializedAsync()
	{
		_currentUrl = NavigationManager.Uri;
		var categories = await CategoryService.GetCategoriesAsync();
		_categories = categories.Where(c => c.ShowOnNavbar).Take(7).ToArray();

		if (_categories.Length < 5)
		{
			_categories = [.._categories, ..categories.Where(c => !_categories.Contains(c)).Take(5 - _categories.Length)];
		}
	}
}
